#include<bits/stdc++.h>
using namespace std;
void mergearr(int *arr,int s,int e){
    int mid=(s+e)/2;
    int len1=mid-s+1;
    int len2=e-mid;
    int *first=new int[len1];
    int *second=new int[len2];


    int mainarr=s;
    for(int i=0;i<len1;i++){
        first[i]=arr[mainarr++];
    }
    mainarr=mid+1;
    for(int i=0;i<len2;i++){
        second[i]=arr[mainarr++];
    }
    int index1=0;
    int index2=0;
    mainarr=s;
    while(index1<len1&&index2<len2){
        if(first[index1]<second[index2]){
            arr[mainarr++]=first[index1++];
        }
        else{
            arr[mainarr++]=second[index2++];
        }
    }
    while(index1<len1){
        arr[mainarr++]=first[index1++];
    }
    while(index2<len2){
        arr[mainarr++]=first[index2++];
    }


}


void mergesort(int *arr,int s,int e){
    if(s>=e){
        return;
    }
    int mid=(s+e)/2;
    //sort start to mid
    mergesort(arr,s,mid);
    //sort mid to end
    mergesort(arr,mid+1,e);
    //merge the sorted part of start and end
    mergearr(arr,s,e);
}

int main(){
    int arr[7]={10,4,3,54,32,45,22};
    int n=7;
    mergesort(arr,0,n-1);
    return 0;
}
